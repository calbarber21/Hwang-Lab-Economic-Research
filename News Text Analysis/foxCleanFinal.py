# -*- coding: utf-8 -*-
"""foxCleanFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ECgnHhrPiT0GZfr-Tt4Bc4_yevljPv6f
"""

# Commented out IPython magic to ensure Python compatibility.
#import pacakges
from io import StringIO
import os
import re
import numpy as np
import time
import datetime
import sys
import pandas as pd 
import pdb
!pip install xlsxwriter
import xlsxwriter
import nltk
#google collab specific line to connect to google drive
from google.colab import drive 
drive.mount('/content/gdrive')
#change directoy to .txt files directory
# %cd /content/gdrive/My\ Drive/FoxNews/FoxNewstxt
!pwd
#import files
files=[i for i in os.listdir() if i.endswith('txt')]
files
#create the empty datafreame and loop to extract key infromation. Title is found because it is always preceeded by "Fox News Network" and followed by "EST"
# Date is found b ecasue it always ends in "day" and start with a day of the week.
#The main transcript starts with Body.
data = pd.DataFrame({'Title':[],'Date':[],'article':[]})
for file in files :
  fileX= open(file, "r")
  text = fileX.read()
  text = text.split("End of Document")
  count = 0
  for episode in text :
    if count > 0 :
      newrow={'Title':title, 'Date':date,'article':body}
      data=data.append(newrow, ignore_index=True)
    getLines = False
    body = []
    episode = episode.splitlines()
    episode = [episode for episode in episode if episode.strip() != '']
    for line in episode :
      if ("Fox News Network" in line) and ("EST" in line) : 
        title = re.findall(r"(\b(?:[A-Z]+[a-z]?[A-Z]*|[A-Z]*[a-z]?[A-Z]+)\b(?:\s+(?:[A-Z]+[a-z]?[A-Z]*|[A-Z]*[a-z]?[A-Z]+)\b)*)",line)
        if len(title) > 2 :
          title = title[0] + title[1]
        elif len(title) > 0 :
          title = title[0]
      if line.endswith("day") and line.startswith(("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) :
        date = re.findall(r'(?:\d{2} )?(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]* (?:\d{1,2}, )?\d{4}',line)
        if len(date) > 0 :
          date = date[0]
      if line.startswith("Body") :
        getLines = True
      if getLines :
        body.append(line)
    count = count + 1 
data.to_excel("sample.xlsx",index=False,encoding="utf-8",engine='xlsxwriter')
